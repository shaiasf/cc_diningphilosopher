[
  {
    "type": "CreateMonitor",
    "details": {
      "log": "ForkUsageSpec was created.",
      "payload": "null",
      "monitor": "ForkUsageSpec",
      "clock": {
        "ForkUsageSpec": 1
      }
    }
  },
  {
    "type": "MonitorStateTransition",
    "details": {
      "log": "ForkUsageSpec enters state \u0027Monitoring\u0027.",
      "state": "Monitoring",
      "payload": "null",
      "isEntry": true,
      "monitor": "ForkUsageSpec",
      "clock": {
        "ForkUsageSpec": 2
      }
    }
  },
  {
    "type": "CreateStateMachine",
    "details": {
      "log": "TestWithNoSwap(1) was created by task \u00272\u0027.",
      "id": "TestWithNoSwap(1)",
      "payload": "null",
      "clock": {
        "TestWithNoSwap(1)": 1
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "TestWithNoSwap(1) enters state \u0027Init\u0027.",
      "id": "TestWithNoSwap(1)",
      "state": "Init",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "TestWithNoSwap(1)": 2
      }
    }
  },
  {
    "type": "CreateStateMachine",
    "details": {
      "log": "Fork(2) was created by TestWithNoSwap(1).",
      "id": "Fork(2)",
      "creatorName": "TestWithNoSwap(1)",
      "creatorType": "TestWithNoSwap",
      "payload": "null",
      "clock": {
        "Fork(2)": 1
      }
    }
  },
  {
    "type": "CreateStateMachine",
    "details": {
      "log": "Fork(3) was created by TestWithNoSwap(1).",
      "id": "Fork(3)",
      "creatorName": "TestWithNoSwap(1)",
      "creatorType": "TestWithNoSwap",
      "payload": "null",
      "clock": {
        "Fork(3)": 1
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Fork(3) enters state \u0027Init\u0027.",
      "id": "Fork(3)",
      "state": "Init",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Fork(3)": 2
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Fork(2) enters state \u0027Init\u0027.",
      "id": "Fork(2)",
      "state": "Init",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Fork(2)": 2
      }
    }
  },
  {
    "type": "CreateStateMachine",
    "details": {
      "log": "Fork(4) was created by TestWithNoSwap(1).",
      "id": "Fork(4)",
      "creatorName": "TestWithNoSwap(1)",
      "creatorType": "TestWithNoSwap",
      "payload": "null",
      "clock": {
        "Fork(4)": 1
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Fork(4) enters state \u0027Init\u0027.",
      "id": "Fork(4)",
      "state": "Init",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Fork(4)": 2
      }
    }
  },
  {
    "type": "CreateStateMachine",
    "details": {
      "log": "Fork(5) was created by TestWithNoSwap(1).",
      "id": "Fork(5)",
      "creatorName": "TestWithNoSwap(1)",
      "creatorType": "TestWithNoSwap",
      "payload": "null",
      "clock": {
        "Fork(5)": 1
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Fork(5) enters state \u0027Init\u0027.",
      "id": "Fork(5)",
      "state": "Init",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Fork(5)": 2
      }
    }
  },
  {
    "type": "CreateStateMachine",
    "details": {
      "log": "Fork(6) was created by TestWithNoSwap(1).",
      "id": "Fork(6)",
      "creatorName": "TestWithNoSwap(1)",
      "creatorType": "TestWithNoSwap",
      "payload": "null",
      "clock": {
        "Fork(6)": 1
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Fork(6) enters state \u0027Init\u0027.",
      "id": "Fork(6)",
      "state": "Init",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Fork(6)": 2
      }
    }
  },
  {
    "type": "CreateStateMachine",
    "details": {
      "log": "Philosopher(7) was created by TestWithNoSwap(1).",
      "id": "Philosopher(7)",
      "creatorName": "TestWithNoSwap(1)",
      "creatorType": "TestWithNoSwap",
      "payload": "null",
      "clock": {
        "Philosopher(7)": 1
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philosopher(7) enters state \u0027Init\u0027.",
      "id": "Philosopher(7)",
      "state": "Init",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Philosopher(7)": 2
      }
    }
  },
  {
    "type": "CreateStateMachine",
    "details": {
      "log": "Philosopher(8) was created by TestWithNoSwap(1).",
      "id": "Philosopher(8)",
      "creatorName": "TestWithNoSwap(1)",
      "creatorType": "TestWithNoSwap",
      "payload": "null",
      "clock": {
        "Philosopher(8)": 1
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philosopher(8) enters state \u0027Init\u0027.",
      "id": "Philosopher(8)",
      "state": "Init",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Philosopher(8)": 2
      }
    }
  },
  {
    "type": "CreateStateMachine",
    "details": {
      "log": "Philosopher(9) was created by TestWithNoSwap(1).",
      "id": "Philosopher(9)",
      "creatorName": "TestWithNoSwap(1)",
      "creatorType": "TestWithNoSwap",
      "payload": "null",
      "clock": {
        "Philosopher(9)": 1
      }
    }
  },
  {
    "type": "CreateStateMachine",
    "details": {
      "log": "Philosopher(10) was created by TestWithNoSwap(1).",
      "id": "Philosopher(10)",
      "creatorName": "TestWithNoSwap(1)",
      "creatorType": "TestWithNoSwap",
      "payload": "null",
      "clock": {
        "Philosopher(10)": 1
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philosopher(10) enters state \u0027Init\u0027.",
      "id": "Philosopher(10)",
      "state": "Init",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Philosopher(10)": 2
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philosopher(9) enters state \u0027Init\u0027.",
      "id": "Philosopher(9)",
      "state": "Init",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Philosopher(9)": 2
      }
    }
  },
  {
    "type": "CreateStateMachine",
    "details": {
      "log": "Philosopher(11) was created by TestWithNoSwap(1).",
      "id": "Philosopher(11)",
      "creatorName": "TestWithNoSwap(1)",
      "creatorType": "TestWithNoSwap",
      "payload": "null",
      "clock": {
        "Philosopher(11)": 1
      }
    }
  },
  {
    "type": "SendEvent",
    "details": {
      "log": "\u0027TestWithNoSwap(1)\u0027 in state \u0027Init\u0027 sent event \u0027eStart\u0027 to \u0027Philosopher(7)\u0027.",
      "event": "eStart",
      "state": "Init",
      "payload": "null",
      "sender": "TestWithNoSwap(1)",
      "target": "Philosopher(7)",
      "isTargetHalted": false,
      "clock": {
        "TestWithNoSwap(1)": 3
      }
    }
  },
  {
    "type": "DequeueEvent",
    "details": {
      "log": "\u0027Philosopher(7)\u0027 dequeued event \u0027eStart\u0027 in state \u0027Init\u0027.",
      "id": "Philosopher(7)",
      "event": "eStart",
      "state": "Init",
      "payload": "null",
      "clock": {
        "Philosopher(7)": 3,
        "TestWithNoSwap(1)": 3
      }
    }
  },
  {
    "type": "GotoState",
    "details": {
      "log": "Philosopher(7) is transitioning from state \u0027Init\u0027 to state \u0027Hungry\u0027.",
      "id": "Philosopher(7)",
      "startState": "Init",
      "endState": "Hungry",
      "payload": "null",
      "clock": {
        "Philosopher(7)": 4,
        "TestWithNoSwap(1)": 3
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philosopher(7) exits state \u0027Init\u0027.",
      "id": "Philosopher(7)",
      "state": "Init",
      "payload": "null",
      "isEntry": false,
      "clock": {
        "Philosopher(7)": 5,
        "TestWithNoSwap(1)": 3
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philosopher(7) enters state \u0027Hungry\u0027.",
      "id": "Philosopher(7)",
      "state": "Hungry",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Philosopher(7)": 6,
        "TestWithNoSwap(1)": 3
      }
    }
  },
  {
    "type": "SendEvent",
    "details": {
      "log": "\u0027Philosopher(7)\u0027 in state \u0027Hungry\u0027 sent event \u0027ePickUp with payload (Philosopher(7))\u0027 to \u0027Fork(2)\u0027.",
      "event": "ePickUp",
      "state": "Hungry",
      "payload": "Philosopher(7)",
      "sender": "Philosopher(7)",
      "target": "Fork(2)",
      "isTargetHalted": false,
      "clock": {
        "Philosopher(7)": 7,
        "TestWithNoSwap(1)": 3
      }
    }
  },
  {
    "type": "SendEvent",
    "details": {
      "log": "\u0027TestWithNoSwap(1)\u0027 in state \u0027Init\u0027 sent event \u0027eStart\u0027 to \u0027Philosopher(8)\u0027.",
      "event": "eStart",
      "state": "Init",
      "payload": "null",
      "sender": "TestWithNoSwap(1)",
      "target": "Philosopher(8)",
      "isTargetHalted": false,
      "clock": {
        "TestWithNoSwap(1)": 4
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philosopher(11) enters state \u0027Init\u0027.",
      "id": "Philosopher(11)",
      "state": "Init",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Philosopher(11)": 2
      }
    }
  },
  {
    "type": "DequeueEvent",
    "details": {
      "log": "\u0027Philosopher(8)\u0027 dequeued event \u0027eStart\u0027 in state \u0027Init\u0027.",
      "id": "Philosopher(8)",
      "event": "eStart",
      "state": "Init",
      "payload": "null",
      "clock": {
        "Philosopher(8)": 3,
        "TestWithNoSwap(1)": 4
      }
    }
  },
  {
    "type": "GotoState",
    "details": {
      "log": "Philosopher(8) is transitioning from state \u0027Init\u0027 to state \u0027Hungry\u0027.",
      "id": "Philosopher(8)",
      "startState": "Init",
      "endState": "Hungry",
      "payload": "null",
      "clock": {
        "Philosopher(8)": 4,
        "TestWithNoSwap(1)": 4
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philosopher(8) exits state \u0027Init\u0027.",
      "id": "Philosopher(8)",
      "state": "Init",
      "payload": "null",
      "isEntry": false,
      "clock": {
        "Philosopher(8)": 5,
        "TestWithNoSwap(1)": 4
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philosopher(8) enters state \u0027Hungry\u0027.",
      "id": "Philosopher(8)",
      "state": "Hungry",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Philosopher(8)": 6,
        "TestWithNoSwap(1)": 4
      }
    }
  },
  {
    "type": "SendEvent",
    "details": {
      "log": "\u0027Philosopher(8)\u0027 in state \u0027Hungry\u0027 sent event \u0027ePickUp with payload (Philosopher(8))\u0027 to \u0027Fork(3)\u0027.",
      "event": "ePickUp",
      "state": "Hungry",
      "payload": "Philosopher(8)",
      "sender": "Philosopher(8)",
      "target": "Fork(3)",
      "isTargetHalted": false,
      "clock": {
        "Philosopher(8)": 7,
        "TestWithNoSwap(1)": 4
      }
    }
  },
  {
    "type": "DequeueEvent",
    "details": {
      "log": "\u0027Fork(2)\u0027 dequeued event \u0027ePickUp with payload (Philosopher(7))\u0027 in state \u0027Init\u0027.",
      "id": "Fork(2)",
      "event": "ePickUp",
      "state": "Init",
      "payload": "Philosopher(7)",
      "clock": {
        "Fork(2)": 3,
        "Philosopher(7)": 7,
        "TestWithNoSwap(1)": 3
      }
    }
  },
  {
    "type": "SendEvent",
    "details": {
      "log": "\u0027TestWithNoSwap(1)\u0027 in state \u0027Init\u0027 sent event \u0027eStart\u0027 to \u0027Philosopher(9)\u0027.",
      "event": "eStart",
      "state": "Init",
      "payload": "null",
      "sender": "TestWithNoSwap(1)",
      "target": "Philosopher(9)",
      "isTargetHalted": false,
      "clock": {
        "TestWithNoSwap(1)": 5
      }
    }
  },
  {
    "type": "DequeueEvent",
    "details": {
      "log": "\u0027Philosopher(9)\u0027 dequeued event \u0027eStart\u0027 in state \u0027Init\u0027.",
      "id": "Philosopher(9)",
      "event": "eStart",
      "state": "Init",
      "payload": "null",
      "clock": {
        "Philosopher(9)": 3,
        "TestWithNoSwap(1)": 5
      }
    }
  },
  {
    "type": "GotoState",
    "details": {
      "log": "Philosopher(9) is transitioning from state \u0027Init\u0027 to state \u0027Hungry\u0027.",
      "id": "Philosopher(9)",
      "startState": "Init",
      "endState": "Hungry",
      "payload": "null",
      "clock": {
        "Philosopher(9)": 4,
        "TestWithNoSwap(1)": 5
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philosopher(9) exits state \u0027Init\u0027.",
      "id": "Philosopher(9)",
      "state": "Init",
      "payload": "null",
      "isEntry": false,
      "clock": {
        "Philosopher(9)": 5,
        "TestWithNoSwap(1)": 5
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philosopher(9) enters state \u0027Hungry\u0027.",
      "id": "Philosopher(9)",
      "state": "Hungry",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Philosopher(9)": 6,
        "TestWithNoSwap(1)": 5
      }
    }
  },
  {
    "type": "SendEvent",
    "details": {
      "log": "\u0027TestWithNoSwap(1)\u0027 in state \u0027Init\u0027 sent event \u0027eStart\u0027 to \u0027Philosopher(10)\u0027.",
      "event": "eStart",
      "state": "Init",
      "payload": "null",
      "sender": "TestWithNoSwap(1)",
      "target": "Philosopher(10)",
      "isTargetHalted": false,
      "clock": {
        "TestWithNoSwap(1)": 6
      }
    }
  },
  {
    "type": "DequeueEvent",
    "details": {
      "log": "\u0027Philosopher(10)\u0027 dequeued event \u0027eStart\u0027 in state \u0027Init\u0027.",
      "id": "Philosopher(10)",
      "event": "eStart",
      "state": "Init",
      "payload": "null",
      "clock": {
        "Philosopher(10)": 3,
        "TestWithNoSwap(1)": 6
      }
    }
  },
  {
    "type": "GotoState",
    "details": {
      "log": "Philosopher(10) is transitioning from state \u0027Init\u0027 to state \u0027Hungry\u0027.",
      "id": "Philosopher(10)",
      "startState": "Init",
      "endState": "Hungry",
      "payload": "null",
      "clock": {
        "Philosopher(10)": 4,
        "TestWithNoSwap(1)": 6
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philosopher(10) exits state \u0027Init\u0027.",
      "id": "Philosopher(10)",
      "state": "Init",
      "payload": "null",
      "isEntry": false,
      "clock": {
        "Philosopher(10)": 5,
        "TestWithNoSwap(1)": 6
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philosopher(10) enters state \u0027Hungry\u0027.",
      "id": "Philosopher(10)",
      "state": "Hungry",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Philosopher(10)": 6,
        "TestWithNoSwap(1)": 6
      }
    }
  },
  {
    "type": "SendEvent",
    "details": {
      "log": "\u0027Fork(2)\u0027 in state \u0027Init\u0027 sent event \u0027eTaken with payload (Fork(2))\u0027 to \u0027Philosopher(7)\u0027.",
      "event": "eTaken",
      "state": "Init",
      "payload": "Fork(2)",
      "sender": "Fork(2)",
      "target": "Philosopher(7)",
      "isTargetHalted": false,
      "clock": {
        "Fork(2)": 4,
        "Philosopher(7)": 7,
        "TestWithNoSwap(1)": 3
      }
    }
  },
  {
    "type": "Announce",
    "details": {
      "log": "Fork(2) announced event ForkGranted with payload \u003Cphilosopher:Philosopher(7), fork:Fork(2), \u003E.",
      "id": "Fork(2)",
      "event": "ForkGranted",
      "payload": {
        "philosopher": "Philosopher(7)",
        "fork": "Fork(2)"
      },
      "clock": {
        "Fork(2)": 5,
        "Philosopher(7)": 7,
        "TestWithNoSwap(1)": 3
      }
    }
  },
  {
    "type": "MonitorProcessEvent",
    "details": {
      "log": "ForkUsageSpec is processing event \u0027ForkGranted with payload (\u003Cphilosopher:Philosopher(7), fork:Fork(2), \u003E)\u0027 in state \u0027Monitoring\u0027.",
      "event": "ForkGranted",
      "state": "Monitoring",
      "payload": {
        "philosopher": "Philosopher(7)",
        "fork": "Fork(2)"
      },
      "sender": "Fork(2)",
      "monitor": "ForkUsageSpec",
      "clock": {
        "ForkUsageSpec": 3,
        "Fork(2)": 5,
        "Philosopher(7)": 7,
        "TestWithNoSwap(1)": 3
      }
    }
  },
  {
    "type": "DequeueEvent",
    "details": {
      "log": "\u0027Philosopher(7)\u0027 dequeued event \u0027eTaken with payload (Fork(2))\u0027 in state \u0027Hungry\u0027.",
      "id": "Philosopher(7)",
      "event": "eTaken",
      "state": "Hungry",
      "payload": "Fork(2)",
      "clock": {
        "Philosopher(7)": 8,
        "TestWithNoSwap(1)": 3,
        "Fork(2)": 4
      }
    }
  },
  {
    "type": "SendEvent",
    "details": {
      "log": "\u0027Philosopher(9)\u0027 in state \u0027Hungry\u0027 sent event \u0027ePickUp with payload (Philosopher(9))\u0027 to \u0027Fork(4)\u0027.",
      "event": "ePickUp",
      "state": "Hungry",
      "payload": "Philosopher(9)",
      "sender": "Philosopher(9)",
      "target": "Fork(4)",
      "isTargetHalted": false,
      "clock": {
        "Philosopher(9)": 7,
        "TestWithNoSwap(1)": 5
      }
    }
  },
  {
    "type": "SendEvent",
    "details": {
      "log": "\u0027Philosopher(7)\u0027 in state \u0027Hungry\u0027 sent event \u0027ePickUp with payload (Philosopher(7))\u0027 to \u0027Fork(3)\u0027.",
      "event": "ePickUp",
      "state": "Hungry",
      "payload": "Philosopher(7)",
      "sender": "Philosopher(7)",
      "target": "Fork(3)",
      "isTargetHalted": false,
      "clock": {
        "Philosopher(7)": 9,
        "TestWithNoSwap(1)": 3,
        "Fork(2)": 4
      }
    }
  },
  {
    "type": "SendEvent",
    "details": {
      "log": "\u0027Philosopher(10)\u0027 in state \u0027Hungry\u0027 sent event \u0027ePickUp with payload (Philosopher(10))\u0027 to \u0027Fork(5)\u0027.",
      "event": "ePickUp",
      "state": "Hungry",
      "payload": "Philosopher(10)",
      "sender": "Philosopher(10)",
      "target": "Fork(5)",
      "isTargetHalted": false,
      "clock": {
        "Philosopher(10)": 7,
        "TestWithNoSwap(1)": 6
      }
    }
  },
  {
    "type": "DequeueEvent",
    "details": {
      "log": "\u0027Fork(5)\u0027 dequeued event \u0027ePickUp with payload (Philosopher(10))\u0027 in state \u0027Init\u0027.",
      "id": "Fork(5)",
      "event": "ePickUp",
      "state": "Init",
      "payload": "Philosopher(10)",
      "clock": {
        "Fork(5)": 3,
        "Philosopher(10)": 7,
        "TestWithNoSwap(1)": 6
      }
    }
  },
  {
    "type": "SendEvent",
    "details": {
      "log": "\u0027TestWithNoSwap(1)\u0027 in state \u0027Init\u0027 sent event \u0027eStart\u0027 to \u0027Philosopher(11)\u0027.",
      "event": "eStart",
      "state": "Init",
      "payload": "null",
      "sender": "TestWithNoSwap(1)",
      "target": "Philosopher(11)",
      "isTargetHalted": false,
      "clock": {
        "TestWithNoSwap(1)": 7
      }
    }
  },
  {
    "type": "DequeueEvent",
    "details": {
      "log": "\u0027Fork(4)\u0027 dequeued event \u0027ePickUp with payload (Philosopher(9))\u0027 in state \u0027Init\u0027.",
      "id": "Fork(4)",
      "event": "ePickUp",
      "state": "Init",
      "payload": "Philosopher(9)",
      "clock": {
        "Fork(4)": 3,
        "Philosopher(9)": 7,
        "TestWithNoSwap(1)": 5
      }
    }
  },
  {
    "type": "DequeueEvent",
    "details": {
      "log": "\u0027Philosopher(11)\u0027 dequeued event \u0027eStart\u0027 in state \u0027Init\u0027.",
      "id": "Philosopher(11)",
      "event": "eStart",
      "state": "Init",
      "payload": "null",
      "clock": {
        "Philosopher(11)": 3,
        "TestWithNoSwap(1)": 7
      }
    }
  },
  {
    "type": "GotoState",
    "details": {
      "log": "Philosopher(11) is transitioning from state \u0027Init\u0027 to state \u0027Hungry\u0027.",
      "id": "Philosopher(11)",
      "startState": "Init",
      "endState": "Hungry",
      "payload": "null",
      "clock": {
        "Philosopher(11)": 4,
        "TestWithNoSwap(1)": 7
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philosopher(11) exits state \u0027Init\u0027.",
      "id": "Philosopher(11)",
      "state": "Init",
      "payload": "null",
      "isEntry": false,
      "clock": {
        "Philosopher(11)": 5,
        "TestWithNoSwap(1)": 7
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "Philosopher(11) enters state \u0027Hungry\u0027.",
      "id": "Philosopher(11)",
      "state": "Hungry",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "Philosopher(11)": 6,
        "TestWithNoSwap(1)": 7
      }
    }
  },
  {
    "type": "SendEvent",
    "details": {
      "log": "\u0027Philosopher(11)\u0027 in state \u0027Hungry\u0027 sent event \u0027ePickUp with payload (Philosopher(11))\u0027 to \u0027Fork(6)\u0027.",
      "event": "ePickUp",
      "state": "Hungry",
      "payload": "Philosopher(11)",
      "sender": "Philosopher(11)",
      "target": "Fork(6)",
      "isTargetHalted": false,
      "clock": {
        "Philosopher(11)": 7,
        "TestWithNoSwap(1)": 7
      }
    }
  },
  {
    "type": "DequeueEvent",
    "details": {
      "log": "\u0027Fork(6)\u0027 dequeued event \u0027ePickUp with payload (Philosopher(11))\u0027 in state \u0027Init\u0027.",
      "id": "Fork(6)",
      "event": "ePickUp",
      "state": "Init",
      "payload": "Philosopher(11)",
      "clock": {
        "Fork(6)": 3,
        "Philosopher(11)": 7,
        "TestWithNoSwap(1)": 7
      }
    }
  },
  {
    "type": "SendEvent",
    "details": {
      "log": "\u0027Fork(5)\u0027 in state \u0027Init\u0027 sent event \u0027eTaken with payload (Fork(5))\u0027 to \u0027Philosopher(10)\u0027.",
      "event": "eTaken",
      "state": "Init",
      "payload": "Fork(5)",
      "sender": "Fork(5)",
      "target": "Philosopher(10)",
      "isTargetHalted": false,
      "clock": {
        "Fork(5)": 4,
        "Philosopher(10)": 7,
        "TestWithNoSwap(1)": 6
      }
    }
  },
  {
    "type": "Announce",
    "details": {
      "log": "Fork(5) announced event ForkGranted with payload \u003Cphilosopher:Philosopher(10), fork:Fork(5), \u003E.",
      "id": "Fork(5)",
      "event": "ForkGranted",
      "payload": {
        "philosopher": "Philosopher(10)",
        "fork": "Fork(5)"
      },
      "clock": {
        "Fork(5)": 5,
        "Philosopher(10)": 7,
        "TestWithNoSwap(1)": 6
      }
    }
  },
  {
    "type": "MonitorProcessEvent",
    "details": {
      "log": "ForkUsageSpec is processing event \u0027ForkGranted with payload (\u003Cphilosopher:Philosopher(10), fork:Fork(5), \u003E)\u0027 in state \u0027Monitoring\u0027.",
      "event": "ForkGranted",
      "state": "Monitoring",
      "payload": {
        "philosopher": "Philosopher(10)",
        "fork": "Fork(5)"
      },
      "sender": "Fork(5)",
      "monitor": "ForkUsageSpec",
      "clock": {
        "ForkUsageSpec": 4,
        "Fork(2)": 5,
        "Philosopher(7)": 7,
        "TestWithNoSwap(1)": 6,
        "Fork(5)": 5,
        "Philosopher(10)": 7
      }
    }
  },
  {
    "type": "SendEvent",
    "details": {
      "log": "\u0027Fork(4)\u0027 in state \u0027Init\u0027 sent event \u0027eTaken with payload (Fork(4))\u0027 to \u0027Philosopher(9)\u0027.",
      "event": "eTaken",
      "state": "Init",
      "payload": "Fork(4)",
      "sender": "Fork(4)",
      "target": "Philosopher(9)",
      "isTargetHalted": false,
      "clock": {
        "Fork(4)": 4,
        "Philosopher(9)": 7,
        "TestWithNoSwap(1)": 5
      }
    }
  },
  {
    "type": "Announce",
    "details": {
      "log": "Fork(4) announced event ForkGranted with payload \u003Cphilosopher:Philosopher(9), fork:Fork(4), \u003E.",
      "id": "Fork(4)",
      "event": "ForkGranted",
      "payload": {
        "philosopher": "Philosopher(9)",
        "fork": "Fork(4)"
      },
      "clock": {
        "Fork(4)": 5,
        "Philosopher(9)": 7,
        "TestWithNoSwap(1)": 5
      }
    }
  },
  {
    "type": "MonitorProcessEvent",
    "details": {
      "log": "ForkUsageSpec is processing event \u0027ForkGranted with payload (\u003Cphilosopher:Philosopher(9), fork:Fork(4), \u003E)\u0027 in state \u0027Monitoring\u0027.",
      "event": "ForkGranted",
      "state": "Monitoring",
      "payload": {
        "philosopher": "Philosopher(9)",
        "fork": "Fork(4)"
      },
      "sender": "Fork(4)",
      "monitor": "ForkUsageSpec",
      "clock": {
        "ForkUsageSpec": 5,
        "Fork(2)": 5,
        "Philosopher(7)": 7,
        "TestWithNoSwap(1)": 6,
        "Fork(5)": 5,
        "Philosopher(10)": 7,
        "Fork(4)": 5,
        "Philosopher(9)": 7
      }
    }
  },
  {
    "type": "DequeueEvent",
    "details": {
      "log": "\u0027Fork(3)\u0027 dequeued event \u0027ePickUp with payload (Philosopher(8))\u0027 in state \u0027Init\u0027.",
      "id": "Fork(3)",
      "event": "ePickUp",
      "state": "Init",
      "payload": "Philosopher(8)",
      "clock": {
        "Fork(3)": 3,
        "Philosopher(8)": 7,
        "TestWithNoSwap(1)": 4
      }
    }
  },
  {
    "type": "SendEvent",
    "details": {
      "log": "\u0027Fork(6)\u0027 in state \u0027Init\u0027 sent event \u0027eTaken with payload (Fork(6))\u0027 to \u0027Philosopher(11)\u0027.",
      "event": "eTaken",
      "state": "Init",
      "payload": "Fork(6)",
      "sender": "Fork(6)",
      "target": "Philosopher(11)",
      "isTargetHalted": false,
      "clock": {
        "Fork(6)": 4,
        "Philosopher(11)": 7,
        "TestWithNoSwap(1)": 7
      }
    }
  },
  {
    "type": "Announce",
    "details": {
      "log": "Fork(6) announced event ForkGranted with payload \u003Cphilosopher:Philosopher(11), fork:Fork(6), \u003E.",
      "id": "Fork(6)",
      "event": "ForkGranted",
      "payload": {
        "philosopher": "Philosopher(11)",
        "fork": "Fork(6)"
      },
      "clock": {
        "Fork(6)": 5,
        "Philosopher(11)": 7,
        "TestWithNoSwap(1)": 7
      }
    }
  },
  {
    "type": "MonitorProcessEvent",
    "details": {
      "log": "ForkUsageSpec is processing event \u0027ForkGranted with payload (\u003Cphilosopher:Philosopher(11), fork:Fork(6), \u003E)\u0027 in state \u0027Monitoring\u0027.",
      "event": "ForkGranted",
      "state": "Monitoring",
      "payload": {
        "philosopher": "Philosopher(11)",
        "fork": "Fork(6)"
      },
      "sender": "Fork(6)",
      "monitor": "ForkUsageSpec",
      "clock": {
        "ForkUsageSpec": 6,
        "Fork(2)": 5,
        "Philosopher(7)": 7,
        "TestWithNoSwap(1)": 7,
        "Fork(5)": 5,
        "Philosopher(10)": 7,
        "Fork(4)": 5,
        "Philosopher(9)": 7,
        "Fork(6)": 5,
        "Philosopher(11)": 7
      }
    }
  },
  {
    "type": "DequeueEvent",
    "details": {
      "log": "\u0027Philosopher(9)\u0027 dequeued event \u0027eTaken with payload (Fork(4))\u0027 in state \u0027Hungry\u0027.",
      "id": "Philosopher(9)",
      "event": "eTaken",
      "state": "Hungry",
      "payload": "Fork(4)",
      "clock": {
        "Philosopher(9)": 8,
        "TestWithNoSwap(1)": 5,
        "Fork(4)": 4
      }
    }
  },
  {
    "type": "SendEvent",
    "details": {
      "log": "\u0027Fork(3)\u0027 in state \u0027Init\u0027 sent event \u0027eTaken with payload (Fork(3))\u0027 to \u0027Philosopher(8)\u0027.",
      "event": "eTaken",
      "state": "Init",
      "payload": "Fork(3)",
      "sender": "Fork(3)",
      "target": "Philosopher(8)",
      "isTargetHalted": false,
      "clock": {
        "Fork(3)": 4,
        "Philosopher(8)": 7,
        "TestWithNoSwap(1)": 4
      }
    }
  },
  {
    "type": "Announce",
    "details": {
      "log": "Fork(3) announced event ForkGranted with payload \u003Cphilosopher:Philosopher(8), fork:Fork(3), \u003E.",
      "id": "Fork(3)",
      "event": "ForkGranted",
      "payload": {
        "philosopher": "Philosopher(8)",
        "fork": "Fork(3)"
      },
      "clock": {
        "Fork(3)": 5,
        "Philosopher(8)": 7,
        "TestWithNoSwap(1)": 4
      }
    }
  },
  {
    "type": "MonitorProcessEvent",
    "details": {
      "log": "ForkUsageSpec is processing event \u0027ForkGranted with payload (\u003Cphilosopher:Philosopher(8), fork:Fork(3), \u003E)\u0027 in state \u0027Monitoring\u0027.",
      "event": "ForkGranted",
      "state": "Monitoring",
      "payload": {
        "philosopher": "Philosopher(8)",
        "fork": "Fork(3)"
      },
      "sender": "Fork(3)",
      "monitor": "ForkUsageSpec",
      "clock": {
        "ForkUsageSpec": 7,
        "Fork(2)": 5,
        "Philosopher(7)": 7,
        "TestWithNoSwap(1)": 7,
        "Fork(5)": 5,
        "Philosopher(10)": 7,
        "Fork(4)": 5,
        "Philosopher(9)": 7,
        "Fork(6)": 5,
        "Philosopher(11)": 7,
        "Fork(3)": 5,
        "Philosopher(8)": 7
      }
    }
  },
  {
    "type": "AssertionFailure",
    "details": {
      "log": "Assertion Failed: NoDeadLock.p:17:7",
      "error": "Assertion Failed: NoDeadLock.p:17:7",
      "payload": "null"
    }
  },
  {
    "type": "StrategyDescription",
    "details": {
      "log": "Found bug using \u0027random\u0027 strategy.",
      "payload": "null",
      "strategy": "random",
      "strategyDescription": "random[seed \u00274291113893\u0027]"
    }
  }
]